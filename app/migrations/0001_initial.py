# Generated by Django 5.1.5 on 2025-01-16 14:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Probe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('RIPE', 'RIPE'), ('OTHER', 'Other')], help_text='Select the type of the probe, e.g., RIPE or Other.', max_length=20, verbose_name='Probe Type')),
                ('name', models.CharField(help_text='Enter the unique name of the probe, e.g., Probe #100.', max_length=100, unique=True, verbose_name='Probe Name')),
                ('asn', models.PositiveIntegerField(help_text='Enter the Autonomous System Number (ASN) of the probe. Must be a valid ASN.', verbose_name='Autonomous System Number')),
                ('ip', models.GenericIPAddressField(help_text='Enter a valid IP address of the probe (IPv4 or IPv6).', verbose_name='IP Address')),
                ('version', models.CharField(choices=[('v4', 'IPv4'), ('v6', 'IPv6')], help_text='Specify whether the IP version is IPv4 or IPv6. Ensure it matches the IP format.', max_length=2, verbose_name='IP Version')),
                ('city', models.CharField(help_text='Enter the city where the probe is located. Only alphabetic characters are allowed.', max_length=100, verbose_name='City')),
                ('state', models.CharField(blank=True, help_text='Enter the state where the probe is located (optional).', max_length=100, null=True, verbose_name='State')),
                ('country', models.CharField(blank=True, help_text='Enter the country where the probe is located (optional).', max_length=100, null=True, verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Probe',
                'verbose_name_plural': 'Probes',
                'ordering': ['type', 'name'],
                'constraints': [models.UniqueConstraint(fields=('asn', 'ip'), name='unique_asn_ip')],
            },
        ),
    ]
